"""Initial migration

Revision ID: 45eb264e00d6
Revises: 1cf0d226c346
Create Date: 2024-10-13 04:07:28.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '45eb264e00d6'
down_revision = '1cf0d226c346'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('property',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('rent_amount', sa.Float(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('beds', sa.Integer(), nullable=False),
    sa.Column('baths', sa.Integer(), nullable=False),
    sa.Column('sqft', sa.Integer(), nullable=False),
    sa.Column('legal_description', sa.String(length=500), nullable=True),
    sa.Column('dwelling_type', sa.String(length=50), nullable=False),
    sa.Column('unit_number', sa.String(length=50), nullable=True),
    sa.Column('vacancy_status', sa.String(length=50), nullable=False),
    sa.Column('lease_term', sa.String(length=50), nullable=False),
    sa.Column('deposit', sa.Float(), nullable=True),
    sa.Column('maintenance_schedule', sa.Text(), nullable=True),
    sa.Column('maintenance_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('property_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact_email', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('emergency_contact', sa.String(length=100), nullable=True),
    sa.Column('application_status', sa.String(length=50), nullable=True),
    sa.Column('background_check', sa.String(length=100), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=100), nullable=False),
    sa.Column('file_url', sa.String(length=200), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('document_type', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lease_agreement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('rent_amount', sa.Float(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('method', sa.String(length=50), nullable=False),
    sa.Column('payment_type', sa.String(length=50), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenant_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lease_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lease_id', sa.Integer(), nullable=False),
    sa.Column('modified_date', sa.DateTime(), nullable=False),
    sa.Column('change_details', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['lease_id'], ['lease_agreement.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.String(length=200), nullable=True))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.drop_column('password_hash')

    # Update existing users with a default password
    op.execute("UPDATE \"user\" SET password = 'default_password_hash' WHERE password IS NULL")

    # Make the password column non-nullable
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.VARCHAR(length=256), autoincrement=False, nullable=True))
        batch_op.alter_column('role',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
        batch_op.drop_column('password')
    op.drop_table('lease_history')
    op.drop_table('tenant_log')
    op.drop_table('payment')
    op.drop_table('lease_agreement')
    op.drop_table('document')
    op.drop_table('tenant')
    op.drop_table('property_log')
    op.drop_table('property')
    # ### end Alembic commands ###
